#!/bin/bash

YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE_BOLD='\033[1;94m'
COLOR_RESET='\033[0m'
BRANCH_NAME=`git rev-parse --abbrev-ref HEAD`

if [[ $noDevAuth = true ]]; then
    echo "===> Skipping SFDC dev org authentication."
else
    echo
    read -p "Enter alias for dev sandbox (default: ${BRANCH_NAME}) " DEV_ALIAS
    if [ -z $DEV_ALIAS ]
    then
        DEV_ALIAS=$BRANCH_NAME
    fi
    sfdx org login web -a $DEV_ALIAS -r https://test.salesforce.com
    PID=$!
    wait $PID
fi

echo

if [[ ! -f auth/public-key.txt ]]
then
    printf "\nERROR: auth/public-key.txt not found\n"
    exit 1
fi

echo
read -p "Enter alias for uat sandbox (default: ${BRANCH_NAME}-uat) " UAT_ALIAS
if [ -z $UAT_ALIAS ]
then
    UAT_ALIAS=${BRANCH_NAME}-uat
fi
if [[ $noUatAuth ]]; then
    echo "===> Skipping SFDC uat org authentication."
else
    sfdx org login web -a $UAT_ALIAS -r https://test.salesforce.com
    PID=$!
    wait $PID
fi

echo "===> Generating encrypted login URL ... "
ORG_INFO="$(sfdx org display -o $UAT_ALIAS --verbose 2>/dev/null)"
LOGIN_URL=$(echo "$ORG_INFO" | awk -F "Sfdx Auth Url" '{print $2}' | xargs)
LOGIN_URL_FILE=auth/sandbox-login-url-${BRANCH_NAME}-uat.txt
echo ${LOGIN_URL} > ${LOGIN_URL_FILE}
cat ${LOGIN_URL_FILE} | age -r $(cat auth/public-key.txt) > ${LOGIN_URL_FILE}.age
git add ${LOGIN_URL_FILE}.age
echo -e "Encrypted login URL has been staged and stored in: ${GREEN}${LOGIN_URL_FILE}.age${COLOR_RESET}\n"
